from aiogram import Dispatcher, types

from authorization import auth
from bot_files import keyboards as kb
from tasks_metrics.to_handlers import generate_excel

# Handlers that don't use Finite State Machine (FSM),
# meaning these commands can be called independent of previous commands
# given that the caller has required rights and not in a FSM command.
async def show_menu_commands(message: types.Message):
    """Displays menu interface to the user.
    
    This can be invoked by typing either of "–ú–µ–Ω—é" or "Menu".

    Returns
    -------
    Message : Awaitable
        Replies to user with the following message (<text>) and
        keyboard (<button>):
        <text>–ú–µ–Ω—é
            <button>"–Ø –Ω–æ–≤–µ–Ω—å–∫–∏–π"
            <button>"–Ø —É–∂–µ —Ä–∞–∑–º–µ—Ç—á–∏–∫"
            <button>"–ü–æ–º–æ—â—å"

    Notes
    -----
    Everyone who has access to this bot can use any of these buttons.
    No checks are made which means bot is basically public.
    """
    await message.answer(
        "–ú–µ–Ω—é",
        reply_markup=kb.menu_kb,
    )

async def get_help(message: types.Message):
    """Displays help message to the user.

    This can be invoked by typing either of the following:.
    "Help", "–ü–æ–º–æ—â—å", "/start", "/help"

    Notes
    -----
    Everyone who has access to this bot can see this message.
    No checks are made which means bot is basically public.
    Catches all uncaught handlers.
    """
    await message.answer(
        # from `help.html`
        ("ü§ñ<b>–ë–æ—Ç –¥–ª—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤-—Ä–∞–∑–º–µ—Ç—á–∏–∫–æ–≤ –≤ TrainingData.\n\n</b>"
            
            + "<u>–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</u>\n"
            + "‚ûñ<code>–ú–µ–Ω—é</code>/<code>Menu</code> - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n\n"
            + "‚ûñ<code>–ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µüìÑ</code> - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è.\n\n"
            + "‚ûñ<code>–¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ‚òëÔ∏è</code> - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –∏ —Ö–æ—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.\n\n"
            + "‚ûñ<code>–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ</code> - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ <b>—É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª</b> —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ, –Ω–æ –ø–æ –∫–∞–∫–æ–π-–ª–∏–±–æ –ø—Ä–∏—á–∏–Ω–µ —Ä–µ—à–∏–ª –ø—Ä–æ–π—Ç–∏ –µ–≥–æ –∑–∞–Ω–æ–≤–æ. "
                + "<b>–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ:</b> –∑–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–≤–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑, –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –±—É–¥—É—Ç —Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –ø–æ –Ω–æ–≤–æ–º—É —Ä–µ—à–µ–Ω–∏—é.\n\n"
            # + "üíº<code>HR</code> - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è HR.\n\n"
            + "‚ùì<code>–ü–æ–º–æ—â—å</code>/<code>Help</code> - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.\n\n"

            + "<u>–¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ</u>üìÑ\n"
            + "–î–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–π —Ä–∞–±–æ—Ç—ã –∏ –æ—Ü–µ–Ω–∫–∏ —Å–≤–æ–∏—Ö —Å–∏–ª –í–∞–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –ø—Ä–æ–π—Ç–∏ –Ω–µ–±–æ–ª—å—à–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –ø–æ —Ä–∞–∑–º–µ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö, \
–∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è —Ç–æ, —á–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ –∑–∞–Ω–∏–º–∞—é—Ç—Å—è —Ä–∞–∑–º–µ—Ç—á–∏–∫–∏ TrainingData. –ü—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è –±—É–¥—É—Ç —Ç–æ—á–Ω–æ—Å—Ç—å –∏ —Å–∫–æ—Ä–æ—Å—Ç—å, \
—Å –∫–æ—Ç–æ—Ä—ã–º–∏ –í—ã —Å–ø—Ä–∞–≤–∏—Ç–µ—Å—å —Å —ç—Ç–∏–º –∑–∞–¥–∞–Ω–∏–µ–º. –ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∏–ª–∏ –í—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –∑–∞–Ω–æ–≤–æ –µ–≥–æ –ø—Ä–æ–π—Ç–∏, \
–Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –Ω–∞–ø–∏—Å–∞—Ç—å HR. <b>–£–¥–∞—á–∏!</b>"),
        parse_mode="HTML",
        reply_markup=kb.menu_kb,
    )

@auth
async def show_hr_commands(message: types.Message):
    """Displays HR menu interface to the HR.
    
    This can be invoked by "HR".

    Returns
    -------
    Message : Awaitable
        Replies to user with the following message (<text>) and
        keyboard (<button>):
        <text>–ú–µ–Ω—é HR
            <button>"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–∞–Ω–¥–∏–¥–∞—Ç–∞"
            <button>"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
            <button>"–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—É"
            <button>"–ü–æ–º–æ—â—å –ø–æ –º–µ–Ω—é HR"
            <button>"–ú–µ–Ω—é"

    Notes
    -----
    Only HR can access this menu.
    """
    await message.answer(
        "–ú–µ–Ω—é HR",
        reply_markup=kb.hr_kb
    )

@auth
async def get_hr_help(message: types.Message):
    """Displays help message to the HR.

    Notes
    -----
    Only HR can access this menu.
    """
    await message.answer(
        # from `help hr.html`
        ("üíº<b>–ú–µ–Ω—é HR</b>\n\n"
            
            + "<u>–í–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</u>\n"
            + "‚ûñ <code>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–∞–Ω–¥–∏–¥–∞—Ç–∞</code> - –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞. "
                + "–ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –µ–≥–æ –ª–æ–≥–∏–Ω (—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É).\n"
            + "‚ûñ <code>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</code> - –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ –º–µ—Ç—Ä–∏–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.\n"
            + "‚ûñ <code>–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—É</code> - –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–∞–Ω–¥–∏–¥–∞—Ç—É –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ "
                + "(–≤—Å–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è —Ç–∞–∫–∏–µ –∂–µ, –∫–∞–∫ —Å–∞–º–æ–µ –ø–µ—Ä–≤–æ–µ).\n"
            + "‚ùì <code>–ü–æ–º–æ—â—å –ø–æ –º–µ–Ω—é HR</code> - –≤—ã–≤–æ–¥–∏—Ç –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
            + "‚¨ÖÔ∏è <code>–ú–µ–Ω—é</code> - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é.\n"),
        parse_mode="HTML",
        reply_markup=kb.hr_kb,
    )

@auth
async def get_all_candidates_results(message: types.Message):
    """Sends all candidates' results and metrics in excel (xlsx) format.

                    xlsx has following columns:

| candidate_username | car_iou | plate_iou | plate_accuracy | task_started        | task_ended          | task_completed | times_attempted |
|--------------------|---------|-----------|----------------|---------------------|---------------------|----------------|-----------------|
| SXRu1              | 0.57    | 0.95      | 0.19           | 2022-01-08 04:05:06 | 2022-01-08 10:00:00 | 05:54:54       | 1               |
| roman_kucev        |         |           |                | 2022-09-20 12:12:12 |                     |                | 1               |
|                    |         |           |                |                     |                     |                |                 |

    Notes
    -----
    There is a limit of 50 Mb on file uploads via a bot.
    Only HR can access this menu.
    """
    excel_file_name, excel_output_name = generate_excel()
    with open(excel_file_name, "rb") as all_results:
        await message.answer_document(
            all_results,
            caption=excel_output_name,
            reply_markup=kb.hr_kb,
        )

def register_general_handlers(dp: Dispatcher):
    dp.register_message_handler(show_menu_commands, text=["–ú–µ–Ω—é", "Menu"])
    dp.register_message_handler(get_help, commands=["start", "help"])
    dp.register_message_handler(get_help, text=["–ü–æ–º–æ—â—å", "Help"])
    dp.register_message_handler(get_hr_help, text=["–ü–æ–º–æ—â—å –ø–æ –º–µ–Ω—é HR"])
    dp.register_message_handler(get_all_candidates_results, text=["–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"])
    dp.register_message_handler(show_hr_commands)
